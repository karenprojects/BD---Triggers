CREATE TABLE TB_PEDIDOS(ID NUMBER,
COD_PEDIDO NUMBER,
DATA_CRIACAO DATE,
DATA_ATUAL DATE,
STATUS VARCHAR(10));
 
CREATE OR REPLACE TRIGGER trgS_pedido
    BEFORE INSERT ON TB_PEDIDOS
    FOR EACH ROW
 
BEGIN 
    --Atualiza o status do pedido para /'Novo após a inserção
    IF :NEW.STATUS IS NULL THEN
        :NEW.STATUS := 'Novo Pedido';
    END IF;
END;
 
 
SELECT*FROM tb_pedidios;
INSERT INTO tb_pedidos(
id,
cod_pedido,
data_cracao,
data_atual
)
VALUES (
111
,555
,SYSDATE
,SYSDATE + 8);

ALTER TABLE TB_PEDIDOS MODIFY STATUS VARCHAR(20);

CREATE TABLE TB_AUDITORIA (
    ID NUMBER GENERATED ALWAYS AS IDENTITY
    , TABELA VARCHAR(30)
    , OPERACAO VARCHAR(30)
    , DATA DATE
    , USUARIO VARCHAR2(30)
);

CREATE OR REPLACE TRIGGER TRG_AUDITORIA
    AFTER INSERT OR UPDATE OR DELETE ON TB_PEDIDOS
    FOR EACH ROW
DECLARE
    OPERACAO VARCHAR2(30);
    NOME_USUARIO VARCHAR2(100);
BEGIN
    IF INSERTING THEN
        OPERACAO := 'INSERT';
    ELSIF UPDATING THEN
        OPERACAO := 'UPDATE';
    ELSIF DELETING THEN
        OPERACAO := 'DELETE';
    END IF;
    
    NOME_USUARIO := SYS_CONTEXT('USERSERV', 'SESSION_USER');
    
    INSERT INTO TB_AUDITORIA
        (TABELA, OPERACAO, DATA, USUARIO)
    VALUES
        ('PEDIDOS_NOVOS', OPERACAO, SYSDATE, NOME_USUARIO);
END;

INSERT INTO TB_PEDIDOS (COD_PEDIDO,
DATA_CRIACAO,
DATA_ATUAL,
STATUS)
VALUES 
(   1,
    sysdate,
    sysdate + 2,
    'cancelado')

SELECT * FROM TB_AUDITORIA